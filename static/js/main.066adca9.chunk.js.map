{"version":3,"sources":["components/Player.js","components/Game.js","components/RadioButton.js","components/Options.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Player","react_default","a","createElement","className","id","concat","this","props","name","life","onClick","decrementLife","incrementLife","Component","Game","players","slice","activePlayers","_this","getActivePlayers","map","player","index","components_Player","key","actions","resetLife","changeScreen","src","width","height","alt","RadioButton","selected","value","Options","components_RadioButton","setActivePlayers","startingLife","setStartingLife","App","screen","components_Options","components_Game","connect","state","dispatch","type","_","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","changeScreenOrientation","_callee","orientation","requestFullScreen","regenerator_default","wrap","_context","prev","next","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","fullscreenElement","call","t0","lock","reason","abrupt","stop","initialState","store","createStore","arguments","length","undefined","action","Object","assign","ReactDOM","render","es","components_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.066adca9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../css/Player.css\";\n\nclass Player extends Component {\n    render() {\n        return (\n            <div className=\"Player\" id={`player-${this.props.id}`}>\n                <div className=\"Player-name\">{this.props.name}</div>\n\n                <div className=\"Player-life\">{this.props.life}</div>\n\n                <div className=\"Player-buttons\">\n                    <button\n                        className=\"Player-button button-decrement\"\n                        onClick={this.props.decrementLife}\n                    >\n                        <span>-</span>\n                    </button>\n                    <button\n                        className=\"Player-button button-increment\"\n                        onClick={this.props.incrementLife}\n                    >\n                        <span>+</span>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport Player from \"./Player\";\n\nimport \"../css/Game.css\";\n\nclass Game extends Component {\n    getActivePlayers() {\n        return this.props.players.slice(0, this.props.activePlayers);\n    }\n\n    render() {\n        return (\n            <div className={`Game Game--players-${this.props.activePlayers}`}>\n                <div className=\"Game__players\">\n                    {this.getActivePlayers().map((player, index) => {\n                        return (\n                            <Player\n                                key={index}\n                                id={index}\n                                name={player.name}\n                                life={player.life}\n                                incrementLife={() =>\n                                    this.props.actions.incrementLife(index)\n                                }\n                                decrementLife={() =>\n                                    this.props.actions.decrementLife(index)\n                                }\n                            />\n                        );\n                    })}\n                </div>\n\n                <div className=\"Menu\">\n                    <button onClick={this.props.actions.resetLife}>Reset</button>\n\n                    <button\n                        className=\"Menu__options-button\"\n                        onClick={() => this.props.actions.changeScreen(\"OPTIONS\")}\n                    >\n                        <img src=\"gear.svg\" width=\"20\" height=\"20\" alt=\"Options\" />\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n\nimport \"../css/RadioButton.css\";\n\nclass RadioButton extends Component {\n    render() {\n        let className = \"RadioButton\";\n\n        if (this.props.selected) {\n            className += \" RadioButton--selected\";\n        }\n\n        return (\n            <div className={className} onClick={this.props.onClick}>\n                {this.props.value}\n            </div>\n        );\n    }\n}\n\nexport default RadioButton;\n","import React, { Component } from \"react\";\nimport RadioButton from \"./RadioButton\";\n\nimport \"../css/Options.css\";\n\nclass Options extends Component {\n    render() {\n        return (\n            <div className=\"Options\">\n                <div className=\"Options__settings\">\n                    <div className=\"Options__setting\">\n                        <h2>Players</h2>\n                        <div className=\"Options__options-group\">\n                            <RadioButton\n                                value={2}\n                                selected={this.props.activePlayers === 2}\n                                onClick={() => this.props.actions.setActivePlayers(2)}\n                            />\n                            <RadioButton\n                                value={3}\n                                selected={this.props.activePlayers === 3}\n                                onClick={() => this.props.actions.setActivePlayers(3)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"Options__setting\">\n                        <h2>Starting Life</h2>\n                        <div className=\"Options__options-group\">\n                            <RadioButton\n                                value={20}\n                                selected={this.props.startingLife === 20}\n                                onClick={() => this.props.actions.setStartingLife(20)}\n                            />\n                            <RadioButton\n                                value={30}\n                                selected={this.props.startingLife === 30}\n                                onClick={() => this.props.actions.setStartingLife(30)}\n                            />\n                            <RadioButton\n                                value={40}\n                                selected={this.props.startingLife === 40}\n                                onClick={() => this.props.actions.setStartingLife(40)}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"Options__confirm\">\n                    <button onClick={() => this.props.actions.changeScreen(\"GAME\")}>\n                        Close\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Options;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Game from \"./Game\";\nimport Options from \"./Options\";\n\nimport \"../css/App.css\";\n\nclass App extends Component {\n    render() {\n        let screen;\n\n        if (this.props.screen === \"OPTIONS\") {\n            screen = (\n                <Options\n                    activePlayers={this.props.activePlayers}\n                    startingLife={this.props.startingLife}\n                    actions={{\n                        setStartingLife: this.props.setStartingLife,\n                        setActivePlayers: this.props.setActivePlayers,\n                        changeScreen: this.props.changeScreen\n                    }}\n                />\n            );\n        } else {\n            screen = (\n                <Game\n                    activePlayers={this.props.activePlayers}\n                    players={this.props.players}\n                    actions={{\n                        incrementLife: this.props.incrementLife,\n                        decrementLife: this.props.decrementLife,\n                        resetLife: this.props.resetLife,\n                        changeScreen: this.props.changeScreen\n                    }}\n                />\n            );\n        }\n\n        return <div className=\"App\">{screen}</div>;\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        screen: state.screen,\n        startingLife: state.startingLife,\n        activePlayers: state.activePlayers,\n        players: state.players\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        incrementLife: index => dispatch({ type: \"INCREMENT_LIFE\", index }),\n        decrementLife: index => dispatch({ type: \"DECREMENT_LIFE\", index }),\n        resetLife: _ => dispatch({ type: \"RESET_LIFE\" }),\n        changeScreen: value => dispatch({ type: \"CHANGE_SCREEN\", value }),\n        setStartingLife: value => dispatch({ type: \"SET_STARTING_LIFE\", value }),\n        setActivePlayers: value => dispatch({ type: \"SET_ACTIVE_PLAYERS\", value })\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport \"./css/index.css\";\n\nasync function changeScreenOrientation(orientation) {\n    try {\n        let requestFullScreen =\n            window.document.documentElement.requestFullscreen ||\n            window.document.documentElement.mozRequestFullScreen ||\n            window.document.documentElement.webkitRequestFullScreen ||\n            window.document.documentElement.msRequestFullscreen;\n\n        if (!document.fullscreenElement) {\n            await requestFullScreen.call(window.document.documentElement);\n        }\n    } catch (err) {\n        console.error(err);\n    }\n\n    await window.screen.orientation.lock(orientation).catch(reason => {\n        console.log(reason);\n    });\n\n    return true;\n}\n\nconst initialState = {\n    screen: \"GAME\",\n    startingLife: 20,\n    activePlayers: 2,\n    players: [\n        { name: \"Player 1\", life: 20 },\n        { name: \"Player 2\", life: 20 },\n        { name: \"Player 3\", life: 20 },\n        { name: \"Player 4\", life: 20 }\n    ]\n};\n\nconst playersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"CHANGE_SCREEN\":\n            if (action.value === \"OPTIONS\") {\n                changeScreenOrientation(\"portrait\");\n            } else {\n                if (state.activePlayers > 2) {\n                    changeScreenOrientation(\"landscape\");\n                } else {\n                    changeScreenOrientation(\"portrait\");\n                }\n            }\n\n            return Object.assign({}, state, {\n                screen: action.value\n            });\n\n        case \"SET_STARTING_LIFE\":\n            return Object.assign({}, state, {\n                startingLife: action.value,\n                players: state.players.map(player => {\n                    player.life = action.value;\n\n                    return player;\n                })\n            });\n\n        case \"SET_ACTIVE_PLAYERS\":\n            return Object.assign({}, state, {\n                activePlayers: action.value\n            });\n\n        case \"INCREMENT_LIFE\":\n            return Object.assign({}, state, {\n                players: state.players.map((player, index) => {\n                    if (index === action.index) {\n                        player.life = player.life + 1;\n                    }\n\n                    return player;\n                })\n            });\n\n        case \"DECREMENT_LIFE\":\n            return Object.assign({}, state, {\n                players: state.players.map((player, index) => {\n                    if (index === action.index) {\n                        player.life = player.life - 1;\n                    }\n\n                    return player;\n                })\n            });\n\n        case \"RESET_LIFE\":\n            return Object.assign({}, state, {\n                players: state.players.map((player, index) => {\n                    player.life = state.startingLife;\n\n                    return player;\n                })\n            });\n\n        default:\n            return state;\n    }\n};\n\nconst store = createStore(playersReducer, initialState);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}